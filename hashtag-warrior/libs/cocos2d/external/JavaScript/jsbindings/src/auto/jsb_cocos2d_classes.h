/*
* AUTOGENERATED FILE. DO NOT EDIT IT
* Generated by "generate_jsb.py -c cocos2d_jsb.ini" on 2013-06-17
* Script version: v0.6
*/
#import "jsb_config.h"
#if JSB_INCLUDE_COCOS2D

#import "jsb_NS_manual.h"
#import "jsb_cocos2d_manual.h"

/*
 * CCNode
 */
#pragma mark - CCNode

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCNode_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCNode_setPosition_(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSB_CCNode_schedule_interval_repeat_delay_(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSB_CCNode_scheduleOnce_delay_(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSB_CCNode_unschedule_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCNode_object;
extern JSClass *JSB_CCNode_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCNode : JSB_NSObject
{
}
@end

/*
 * CCParticleSystem
 */
#pragma mark - CCParticleSystem

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleSystem_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCParticleSystem_setBlendFunc_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCParticleSystem_object;
extern JSClass *JSB_CCParticleSystem_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleSystem : JSB_CCNode
{
}
@end

/*
 * CCParticleSystemQuad
 */
#pragma mark - CCParticleSystemQuad

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleSystemQuad_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleSystemQuad_object;
extern JSClass *JSB_CCParticleSystemQuad_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleSystemQuad : JSB_CCParticleSystem
{
}
@end

/*
 * CCParticleMeteor
 */
#pragma mark - CCParticleMeteor

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleMeteor_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleMeteor_object;
extern JSClass *JSB_CCParticleMeteor_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleMeteor : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCFontDefinition
 */
#pragma mark - CCFontDefinition

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFontDefinition_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFontDefinition_object;
extern JSClass *JSB_CCFontDefinition_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFontDefinition : JSB_NSObject
{
}
@end

/*
 * CCAction
 */
#pragma mark - CCAction

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCAction_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCAction_object;
extern JSClass *JSB_CCAction_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCAction : JSB_NSObject
{
}
@end

/*
 * CCFiniteTimeAction
 */
#pragma mark - CCFiniteTimeAction

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFiniteTimeAction_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFiniteTimeAction_object;
extern JSClass *JSB_CCFiniteTimeAction_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFiniteTimeAction : JSB_CCAction
{
}
@end

/*
 * CCActionInterval
 */
#pragma mark - CCActionInterval

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCActionInterval_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCActionInterval_object;
extern JSClass *JSB_CCActionInterval_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCActionInterval : JSB_CCFiniteTimeAction
{
}
@end

/*
 * CCProgressFromTo
 */
#pragma mark - CCProgressFromTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCProgressFromTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCProgressFromTo_object;
extern JSClass *JSB_CCProgressFromTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCProgressFromTo : JSB_CCActionInterval
{
}
@end

/*
 * CCTMXObjectGroup
 */
#pragma mark - CCTMXObjectGroup

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTMXObjectGroup_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTMXObjectGroup_object;
extern JSClass *JSB_CCTMXObjectGroup_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTMXObjectGroup : JSB_NSObject
{
}
@end

/*
 * CCMoveBy
 */
#pragma mark - CCMoveBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMoveBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCMoveBy_object;
extern JSClass *JSB_CCMoveBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMoveBy : JSB_CCActionInterval
{
}
@end

/*
 * CCCamera
 */
#pragma mark - CCCamera

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCCamera_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCCamera_object;
extern JSClass *JSB_CCCamera_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCCamera : JSB_NSObject
{
}
@end

/*
 * CCReverseTime
 */
#pragma mark - CCReverseTime

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCReverseTime_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCReverseTime_object;
extern JSClass *JSB_CCReverseTime_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCReverseTime : JSB_CCActionInterval
{
}
@end

/*
 * CCActionEase
 */
#pragma mark - CCActionEase

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCActionEase_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCActionEase_object;
extern JSClass *JSB_CCActionEase_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCActionEase : JSB_CCActionInterval
{
}
@end

/*
 * CCEaseElastic
 */
#pragma mark - CCEaseElastic

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseElastic_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseElastic_object;
extern JSClass *JSB_CCEaseElastic_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseElastic : JSB_CCActionEase
{
}
@end

/*
 * CCEaseElasticOut
 */
#pragma mark - CCEaseElasticOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseElasticOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseElasticOut_object;
extern JSClass *JSB_CCEaseElasticOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseElasticOut : JSB_CCEaseElastic
{
}
@end

/*
 * CCProgressTo
 */
#pragma mark - CCProgressTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCProgressTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCProgressTo_object;
extern JSClass *JSB_CCProgressTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCProgressTo : JSB_CCActionInterval
{
}
@end

/*
 * CCScene
 */
#pragma mark - CCScene

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCScene_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCScene_object;
extern JSClass *JSB_CCScene_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCScene : JSB_CCNode
{
}
@end

/*
 * CCActionInstant
 */
#pragma mark - CCActionInstant

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCActionInstant_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCActionInstant_object;
extern JSClass *JSB_CCActionInstant_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCActionInstant : JSB_CCFiniteTimeAction
{
}
@end

/*
 * CCFlipX
 */
#pragma mark - CCFlipX

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFlipX_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFlipX_object;
extern JSClass *JSB_CCFlipX_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFlipX : JSB_CCActionInstant
{
}
@end

/*
 * CCFlipY
 */
#pragma mark - CCFlipY

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFlipY_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFlipY_object;
extern JSClass *JSB_CCFlipY_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFlipY : JSB_CCActionInstant
{
}
@end

/*
 * CCGridAction
 */
#pragma mark - CCGridAction

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCGridAction_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCGridAction_object;
extern JSClass *JSB_CCGridAction_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCGridAction : JSB_CCActionInterval
{
}
@end

/*
 * CCTiledGrid3DAction
 */
#pragma mark - CCTiledGrid3DAction

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTiledGrid3DAction_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTiledGrid3DAction_object;
extern JSClass *JSB_CCTiledGrid3DAction_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTiledGrid3DAction : JSB_CCGridAction
{
}
@end

/*
 * CCShakyTiles3D
 */
#pragma mark - CCShakyTiles3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCShakyTiles3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCShakyTiles3D_object;
extern JSClass *JSB_CCShakyTiles3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCShakyTiles3D : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCJumpBy
 */
#pragma mark - CCJumpBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCJumpBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCJumpBy_object;
extern JSClass *JSB_CCJumpBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCJumpBy : JSB_CCActionInterval
{
}
@end

/*
 * CCNodeRGBA
 */
#pragma mark - CCNodeRGBA

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCNodeRGBA_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCNodeRGBA_object;
extern JSClass *JSB_CCNodeRGBA_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCNodeRGBA : JSB_CCNode
{
}
@end

/*
 * CCSprite
 */
#pragma mark - CCSprite

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSprite_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCSprite_setBlendFunc_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCSprite_object;
extern JSClass *JSB_CCSprite_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSprite : JSB_CCNodeRGBA
{
}
@end

/*
 * CCLabelTTF
 */
#pragma mark - CCLabelTTF

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCLabelTTF_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCLabelTTF_object;
extern JSClass *JSB_CCLabelTTF_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCLabelTTF : JSB_CCSprite
{
}
@end

/*
 * CCTransitionScene
 */
#pragma mark - CCTransitionScene

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionScene_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionScene_object;
extern JSClass *JSB_CCTransitionScene_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionScene : JSB_CCScene
{
}
@end

/*
 * CCTransitionProgress
 */
#pragma mark - CCTransitionProgress

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionProgress_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionProgress_object;
extern JSClass *JSB_CCTransitionProgress_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionProgress : JSB_CCTransitionScene
{
}
@end

/*
 * CCTransitionProgressRadialCCW
 */
#pragma mark - CCTransitionProgressRadialCCW

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionProgressRadialCCW_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionProgressRadialCCW_object;
extern JSClass *JSB_CCTransitionProgressRadialCCW_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionProgressRadialCCW : JSB_CCTransitionProgress
{
}
@end

/*
 * CCShaderCache
 */
#pragma mark - CCShaderCache

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCShaderCache_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCShaderCache_object;
extern JSClass *JSB_CCShaderCache_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCShaderCache : JSB_NSObject
{
}
@end

/*
 * CCTransitionFadeTR
 */
#pragma mark - CCTransitionFadeTR

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionFadeTR_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionFadeTR_object;
extern JSClass *JSB_CCTransitionFadeTR_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionFadeTR : JSB_CCTransitionScene
{
}
@end

/*
 * CCTransitionSceneOriented
 */
#pragma mark - CCTransitionSceneOriented

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionSceneOriented_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionSceneOriented_object;
extern JSClass *JSB_CCTransitionSceneOriented_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionSceneOriented : JSB_CCTransitionScene
{
}
@end

/*
 * CCScaleTo
 */
#pragma mark - CCScaleTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCScaleTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCScaleTo_object;
extern JSClass *JSB_CCScaleTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCScaleTo : JSB_CCActionInterval
{
}
@end

/*
 * CCScaleBy
 */
#pragma mark - CCScaleBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCScaleBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCScaleBy_object;
extern JSClass *JSB_CCScaleBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCScaleBy : JSB_CCScaleTo
{
}
@end

/*
 * CCTransitionPageTurn
 */
#pragma mark - CCTransitionPageTurn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionPageTurn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionPageTurn_object;
extern JSClass *JSB_CCTransitionPageTurn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionPageTurn : JSB_CCTransitionScene
{
}
@end

/*
 * CCTransitionRotoZoom
 */
#pragma mark - CCTransitionRotoZoom

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionRotoZoom_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionRotoZoom_object;
extern JSClass *JSB_CCTransitionRotoZoom_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionRotoZoom : JSB_CCTransitionScene
{
}
@end

/*
 * CCTransitionFadeDown
 */
#pragma mark - CCTransitionFadeDown

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionFadeDown_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionFadeDown_object;
extern JSClass *JSB_CCTransitionFadeDown_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionFadeDown : JSB_CCTransitionFadeTR
{
}
@end

/*
 * CCDelayTime
 */
#pragma mark - CCDelayTime

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCDelayTime_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCDelayTime_object;
extern JSClass *JSB_CCDelayTime_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCDelayTime : JSB_CCActionInterval
{
}
@end

/*
 * CCEaseRateAction
 */
#pragma mark - CCEaseRateAction

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseRateAction_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseRateAction_object;
extern JSClass *JSB_CCEaseRateAction_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseRateAction : JSB_CCActionEase
{
}
@end

/*
 * CCEaseInOut
 */
#pragma mark - CCEaseInOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseInOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseInOut_object;
extern JSClass *JSB_CCEaseInOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseInOut : JSB_CCEaseRateAction
{
}
@end

/*
 * CCTransitionSplitCols
 */
#pragma mark - CCTransitionSplitCols

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionSplitCols_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionSplitCols_object;
extern JSClass *JSB_CCTransitionSplitCols_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionSplitCols : JSB_CCTransitionScene
{
}
@end

/*
 * CCCardinalSplineTo
 */
#pragma mark - CCCardinalSplineTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCCardinalSplineTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCCardinalSplineTo_actionWithDuration_points_tension__static(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCCardinalSplineTo_object;
extern JSClass *JSB_CCCardinalSplineTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCCardinalSplineTo : JSB_CCActionInterval
{
}
@end

/*
 * CCCardinalSplineBy
 */
#pragma mark - CCCardinalSplineBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCCardinalSplineBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCCardinalSplineBy_object;
extern JSClass *JSB_CCCardinalSplineBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCCardinalSplineBy : JSB_CCCardinalSplineTo
{
}
@end

/*
 * CCCatmullRomBy
 */
#pragma mark - CCCatmullRomBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCCatmullRomBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCCatmullRomBy_actionWithDuration_points__static(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCCatmullRomBy_object;
extern JSClass *JSB_CCCatmullRomBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCCatmullRomBy : JSB_CCCardinalSplineBy
{
}
@end

/*
 * CCTransitionFlipAngular
 */
#pragma mark - CCTransitionFlipAngular

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionFlipAngular_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionFlipAngular_object;
extern JSClass *JSB_CCTransitionFlipAngular_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionFlipAngular : JSB_CCTransitionSceneOriented
{
}
@end

/*
 * CCHide
 */
#pragma mark - CCHide

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCHide_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCHide_object;
extern JSClass *JSB_CCHide_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCHide : JSB_CCActionInstant
{
}
@end

/*
 * CCFadeOutTRTiles
 */
#pragma mark - CCFadeOutTRTiles

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFadeOutTRTiles_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFadeOutTRTiles_object;
extern JSClass *JSB_CCFadeOutTRTiles_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFadeOutTRTiles : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCFadeOutUpTiles
 */
#pragma mark - CCFadeOutUpTiles

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFadeOutUpTiles_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFadeOutUpTiles_object;
extern JSClass *JSB_CCFadeOutUpTiles_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFadeOutUpTiles : JSB_CCFadeOutTRTiles
{
}
@end

/*
 * CCFadeOutDownTiles
 */
#pragma mark - CCFadeOutDownTiles

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFadeOutDownTiles_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFadeOutDownTiles_object;
extern JSClass *JSB_CCFadeOutDownTiles_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFadeOutDownTiles : JSB_CCFadeOutUpTiles
{
}
@end

/*
 * CCEaseBackIn
 */
#pragma mark - CCEaseBackIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseBackIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseBackIn_object;
extern JSClass *JSB_CCEaseBackIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseBackIn : JSB_CCActionEase
{
}
@end

/*
 * CCSpriteBatchNode
 */
#pragma mark - CCSpriteBatchNode

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSpriteBatchNode_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCSpriteBatchNode_setBlendFunc_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCSpriteBatchNode_object;
extern JSClass *JSB_CCSpriteBatchNode_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSpriteBatchNode : JSB_CCNode
{
}
@end

/*
 * CCTMXLayer
 */
#pragma mark - CCTMXLayer

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTMXLayer_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCTMXLayer_getTileFlagsAt(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCTMXLayer_object;
extern JSClass *JSB_CCTMXLayer_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTMXLayer : JSB_CCSpriteBatchNode
{
}
@end

/*
 * CCTexture2D
 */
#pragma mark - CCTexture2D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTexture2D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCTexture2D_setTexParameters_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCTexture2D_object;
extern JSClass *JSB_CCTexture2D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTexture2D : JSB_NSObject
{
}
@end

/*
 * CCAccelDeccelAmplitude
 */
#pragma mark - CCAccelDeccelAmplitude

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCAccelDeccelAmplitude_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCAccelDeccelAmplitude_object;
extern JSClass *JSB_CCAccelDeccelAmplitude_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCAccelDeccelAmplitude : JSB_CCActionInterval
{
}
@end

/*
 * CCJumpTiles3D
 */
#pragma mark - CCJumpTiles3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCJumpTiles3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCJumpTiles3D_object;
extern JSClass *JSB_CCJumpTiles3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCJumpTiles3D : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCGrid3DAction
 */
#pragma mark - CCGrid3DAction

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCGrid3DAction_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCGrid3DAction_object;
extern JSClass *JSB_CCGrid3DAction_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCGrid3DAction : JSB_CCGridAction
{
}
@end

/*
 * CCMenuItem
 */
#pragma mark - CCMenuItem

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMenuItem_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCMenuItem_setBlock_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCMenuItem_object;
extern JSClass *JSB_CCMenuItem_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMenuItem : JSB_CCNodeRGBA
{
}
@end

/*
 * CCMenuItemSprite
 */
#pragma mark - CCMenuItemSprite

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMenuItemSprite_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCMenuItemSprite_itemWithNormalSprite_selectedSprite_disabledSprite_block__static(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSB_CCMenuItemSprite_initWithNormalSprite_selectedSprite_disabledSprite_block_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCMenuItemSprite_object;
extern JSClass *JSB_CCMenuItemSprite_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMenuItemSprite : JSB_CCMenuItem
{
}
@end

/*
 * CCMenuItemImage
 */
#pragma mark - CCMenuItemImage

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMenuItemImage_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCMenuItemImage_itemWithNormalImage_selectedImage_disabledImage_block__static(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSB_CCMenuItemImage_initWithNormalImage_selectedImage_disabledImage_block_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCMenuItemImage_object;
extern JSClass *JSB_CCMenuItemImage_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMenuItemImage : JSB_CCMenuItemSprite
{
}
@end

/*
 * CCParticleBatchNode
 */
#pragma mark - CCParticleBatchNode

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleBatchNode_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCParticleBatchNode_setBlendFunc_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCParticleBatchNode_object;
extern JSClass *JSB_CCParticleBatchNode_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleBatchNode : JSB_CCNode
{
}
@end

/*
 * CCTransitionCrossFade
 */
#pragma mark - CCTransitionCrossFade

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionCrossFade_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionCrossFade_object;
extern JSClass *JSB_CCTransitionCrossFade_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionCrossFade : JSB_CCTransitionScene
{
}
@end

/*
 * CCPageTurn3D
 */
#pragma mark - CCPageTurn3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCPageTurn3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCPageTurn3D_object;
extern JSClass *JSB_CCPageTurn3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCPageTurn3D : JSB_CCGrid3DAction
{
}
@end

/*
 * CCBMFontConfiguration
 */
#pragma mark - CCBMFontConfiguration

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCBMFontConfiguration_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCBMFontConfiguration_object;
extern JSClass *JSB_CCBMFontConfiguration_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCBMFontConfiguration : JSB_NSObject
{
}
@end

/*
 * CCEaseElasticIn
 */
#pragma mark - CCEaseElasticIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseElasticIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseElasticIn_object;
extern JSClass *JSB_CCEaseElasticIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseElasticIn : JSB_CCEaseElastic
{
}
@end

/*
 * CCSpeed
 */
#pragma mark - CCSpeed

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSpeed_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSpeed_object;
extern JSClass *JSB_CCSpeed_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSpeed : JSB_CCAction
{
}
@end

/*
 * CCRotateTo
 */
#pragma mark - CCRotateTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCRotateTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCRotateTo_object;
extern JSClass *JSB_CCRotateTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCRotateTo : JSB_CCActionInterval
{
}
@end

/*
 * CCActionCamera
 */
#pragma mark - CCActionCamera

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCActionCamera_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCActionCamera_object;
extern JSClass *JSB_CCActionCamera_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCActionCamera : JSB_CCActionInterval
{
}
@end

/*
 * CCParticleGalaxy
 */
#pragma mark - CCParticleGalaxy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleGalaxy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleGalaxy_object;
extern JSClass *JSB_CCParticleGalaxy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleGalaxy : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCMotionStreak
 */
#pragma mark - CCMotionStreak

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMotionStreak_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCMotionStreak_setBlendFunc_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCMotionStreak_object;
extern JSClass *JSB_CCMotionStreak_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMotionStreak : JSB_CCNodeRGBA
{
}
@end

/*
 * CCShow
 */
#pragma mark - CCShow

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCShow_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCShow_object;
extern JSClass *JSB_CCShow_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCShow : JSB_CCActionInstant
{
}
@end

/*
 * CCAccelAmplitude
 */
#pragma mark - CCAccelAmplitude

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCAccelAmplitude_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCAccelAmplitude_object;
extern JSClass *JSB_CCAccelAmplitude_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCAccelAmplitude : JSB_CCActionInterval
{
}
@end

/*
 * CCGridBase
 */
#pragma mark - CCGridBase

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCGridBase_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCGridBase_object;
extern JSClass *JSB_CCGridBase_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCGridBase : JSB_NSObject
{
}
@end

/*
 * CCTiledGrid3D
 */
#pragma mark - CCTiledGrid3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTiledGrid3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTiledGrid3D_object;
extern JSClass *JSB_CCTiledGrid3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTiledGrid3D : JSB_CCGridBase
{
}
@end

/*
 * CCEaseBounce
 */
#pragma mark - CCEaseBounce

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseBounce_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseBounce_object;
extern JSClass *JSB_CCEaseBounce_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseBounce : JSB_CCActionEase
{
}
@end

/*
 * CCEaseBounceOut
 */
#pragma mark - CCEaseBounceOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseBounceOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseBounceOut_object;
extern JSClass *JSB_CCEaseBounceOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseBounceOut : JSB_CCEaseBounce
{
}
@end

/*
 * CCFadeOut
 */
#pragma mark - CCFadeOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFadeOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFadeOut_object;
extern JSClass *JSB_CCFadeOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFadeOut : JSB_CCActionInterval
{
}
@end

/*
 * CCAnimationCache
 */
#pragma mark - CCAnimationCache

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCAnimationCache_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCAnimationCache_object;
extern JSClass *JSB_CCAnimationCache_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCAnimationCache : JSB_NSObject
{
}
@end

/*
 * CCRepeatForever
 */
#pragma mark - CCRepeatForever

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCRepeatForever_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCRepeatForever_object;
extern JSClass *JSB_CCRepeatForever_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCRepeatForever : JSB_CCAction
{
}
@end

/*
 * CCFadeOutBLTiles
 */
#pragma mark - CCFadeOutBLTiles

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFadeOutBLTiles_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFadeOutBLTiles_object;
extern JSClass *JSB_CCFadeOutBLTiles_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFadeOutBLTiles : JSB_CCFadeOutTRTiles
{
}
@end

/*
 * CCParticleSun
 */
#pragma mark - CCParticleSun

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleSun_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleSun_object;
extern JSClass *JSB_CCParticleSun_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleSun : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCTransitionProgressVertical
 */
#pragma mark - CCTransitionProgressVertical

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionProgressVertical_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionProgressVertical_object;
extern JSClass *JSB_CCTransitionProgressVertical_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionProgressVertical : JSB_CCTransitionProgress
{
}
@end

/*
 * CCFileUtils
 */
#pragma mark - CCFileUtils

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFileUtils_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFileUtils_object;
extern JSClass *JSB_CCFileUtils_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFileUtils : JSB_NSObject
{
}
@end

/*
 * CCParticleSpiral
 */
#pragma mark - CCParticleSpiral

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleSpiral_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleSpiral_object;
extern JSClass *JSB_CCParticleSpiral_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleSpiral : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCAtlasNode
 */
#pragma mark - CCAtlasNode

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCAtlasNode_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCAtlasNode_setBlendFunc_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCAtlasNode_object;
extern JSClass *JSB_CCAtlasNode_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCAtlasNode : JSB_CCNodeRGBA
{
}
@end

/*
 * CCTileMapAtlas
 */
#pragma mark - CCTileMapAtlas

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTileMapAtlas_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTileMapAtlas_object;
extern JSClass *JSB_CCTileMapAtlas_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTileMapAtlas : JSB_CCAtlasNode
{
}
@end

/*
 * CCParticleFlower
 */
#pragma mark - CCParticleFlower

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleFlower_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleFlower_object;
extern JSClass *JSB_CCParticleFlower_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleFlower : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCCallBlock
 */
#pragma mark - CCCallBlock

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCCallBlock_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCCallBlock_object;
extern JSClass *JSB_CCCallBlock_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCCallBlock : JSB_CCActionInstant
{
}
@end

/*
 * CCTransitionShrinkGrow
 */
#pragma mark - CCTransitionShrinkGrow

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionShrinkGrow_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionShrinkGrow_object;
extern JSClass *JSB_CCTransitionShrinkGrow_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionShrinkGrow : JSB_CCTransitionScene
{
}
@end

/*
 * CCEaseExponentialInOut
 */
#pragma mark - CCEaseExponentialInOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseExponentialInOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseExponentialInOut_object;
extern JSClass *JSB_CCEaseExponentialInOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseExponentialInOut : JSB_CCActionEase
{
}
@end

/*
 * CCParticleRain
 */
#pragma mark - CCParticleRain

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleRain_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleRain_object;
extern JSClass *JSB_CCParticleRain_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleRain : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCMenuItemLabel
 */
#pragma mark - CCMenuItemLabel

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMenuItemLabel_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCMenuItemLabel_itemWithLabel_block__static(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSB_CCMenuItemLabel_initWithLabel_block_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCMenuItemLabel_object;
extern JSClass *JSB_CCMenuItemLabel_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMenuItemLabel : JSB_CCMenuItem
{
}
@end

/*
 * CCMenuItemFont
 */
#pragma mark - CCMenuItemFont

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMenuItemFont_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCMenuItemFont_itemWithString_block__static(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSB_CCMenuItemFont_initWithString_block_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCMenuItemFont_object;
extern JSClass *JSB_CCMenuItemFont_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMenuItemFont : JSB_CCMenuItemLabel
{
}
@end

/*
 * CCTargetedAction
 */
#pragma mark - CCTargetedAction

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTargetedAction_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTargetedAction_object;
extern JSClass *JSB_CCTargetedAction_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTargetedAction : JSB_CCActionInterval
{
}
@end

/*
 * CCSkewTo
 */
#pragma mark - CCSkewTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSkewTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSkewTo_object;
extern JSClass *JSB_CCSkewTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSkewTo : JSB_CCActionInterval
{
}
@end

/*
 * CCSkewBy
 */
#pragma mark - CCSkewBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSkewBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSkewBy_object;
extern JSClass *JSB_CCSkewBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSkewBy : JSB_CCSkewTo
{
}
@end

/*
 * CCParticleFireworks
 */
#pragma mark - CCParticleFireworks

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleFireworks_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleFireworks_object;
extern JSClass *JSB_CCParticleFireworks_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleFireworks : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCSpawn
 */
#pragma mark - CCSpawn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSpawn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSpawn_object;
extern JSClass *JSB_CCSpawn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSpawn : JSB_CCActionInterval
{
}
@end

/*
 * CCTMXTiledMap
 */
#pragma mark - CCTMXTiledMap

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTMXTiledMap_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTMXTiledMap_object;
extern JSClass *JSB_CCTMXTiledMap_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTMXTiledMap : JSB_CCNode
{
}
@end

/*
 * CCParticleExplosion
 */
#pragma mark - CCParticleExplosion

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleExplosion_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleExplosion_object;
extern JSClass *JSB_CCParticleExplosion_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleExplosion : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCToggleVisibility
 */
#pragma mark - CCToggleVisibility

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCToggleVisibility_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCToggleVisibility_object;
extern JSClass *JSB_CCToggleVisibility_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCToggleVisibility : JSB_CCActionInstant
{
}
@end

/*
 * CCTransitionFade
 */
#pragma mark - CCTransitionFade

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionFade_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionFade_object;
extern JSClass *JSB_CCTransitionFade_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionFade : JSB_CCTransitionScene
{
}
@end

/*
 * CCLabelAtlas
 */
#pragma mark - CCLabelAtlas

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCLabelAtlas_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCLabelAtlas_object;
extern JSClass *JSB_CCLabelAtlas_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCLabelAtlas : JSB_CCAtlasNode
{
}
@end

/*
 * CCTransitionMoveInL
 */
#pragma mark - CCTransitionMoveInL

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionMoveInL_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionMoveInL_object;
extern JSClass *JSB_CCTransitionMoveInL_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionMoveInL : JSB_CCTransitionScene
{
}
@end

/*
 * CCTransitionMoveInT
 */
#pragma mark - CCTransitionMoveInT

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionMoveInT_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionMoveInT_object;
extern JSClass *JSB_CCTransitionMoveInT_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionMoveInT : JSB_CCTransitionMoveInL
{
}
@end

/*
 * CCTransitionMoveInR
 */
#pragma mark - CCTransitionMoveInR

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionMoveInR_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionMoveInR_object;
extern JSClass *JSB_CCTransitionMoveInR_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionMoveInR : JSB_CCTransitionMoveInL
{
}
@end

/*
 * CCEaseExponentialIn
 */
#pragma mark - CCEaseExponentialIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseExponentialIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseExponentialIn_object;
extern JSClass *JSB_CCEaseExponentialIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseExponentialIn : JSB_CCActionEase
{
}
@end

/*
 * CCPlace
 */
#pragma mark - CCPlace

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCPlace_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCPlace_object;
extern JSClass *JSB_CCPlace_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCPlace : JSB_CCActionInstant
{
}
@end

/*
 * CCParticleFire
 */
#pragma mark - CCParticleFire

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleFire_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleFire_object;
extern JSClass *JSB_CCParticleFire_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleFire : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCCatmullRomTo
 */
#pragma mark - CCCatmullRomTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCCatmullRomTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCCatmullRomTo_actionWithDuration_points__static(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCCatmullRomTo_object;
extern JSClass *JSB_CCCatmullRomTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCCatmullRomTo : JSB_CCCardinalSplineTo
{
}
@end

/*
 * CCStopGrid
 */
#pragma mark - CCStopGrid

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCStopGrid_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCStopGrid_object;
extern JSClass *JSB_CCStopGrid_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCStopGrid : JSB_CCActionInstant
{
}
@end

/*
 * CCLabelBMFont
 */
#pragma mark - CCLabelBMFont

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCLabelBMFont_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCLabelBMFont_object;
extern JSClass *JSB_CCLabelBMFont_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCLabelBMFont : JSB_CCSpriteBatchNode
{
}
@end

/*
 * CCTransitionMoveInB
 */
#pragma mark - CCTransitionMoveInB

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionMoveInB_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionMoveInB_object;
extern JSClass *JSB_CCTransitionMoveInB_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionMoveInB : JSB_CCTransitionMoveInL
{
}
@end

/*
 * CCTransitionZoomFlipX
 */
#pragma mark - CCTransitionZoomFlipX

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionZoomFlipX_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionZoomFlipX_object;
extern JSClass *JSB_CCTransitionZoomFlipX_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionZoomFlipX : JSB_CCTransitionSceneOriented
{
}
@end

/*
 * CCEaseOut
 */
#pragma mark - CCEaseOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseOut_object;
extern JSClass *JSB_CCEaseOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseOut : JSB_CCEaseRateAction
{
}
@end

/*
 * CCMenuItemToggle
 */
#pragma mark - CCMenuItemToggle

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMenuItemToggle_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCMenuItemToggle_object;
extern JSClass *JSB_CCMenuItemToggle_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMenuItemToggle : JSB_CCMenuItem
{
}
@end

/*
 * CCScheduler
 */
#pragma mark - CCScheduler

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCScheduler_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCScheduler_scheduleBlockForKey_target_interval_repeat_delay_paused_block_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCScheduler_object;
extern JSClass *JSB_CCScheduler_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCScheduler : JSB_NSObject
{
}
@end

/*
 * CCEasePolynomial
 */
#pragma mark - CCEasePolynomial

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEasePolynomial_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEasePolynomial_object;
extern JSClass *JSB_CCEasePolynomial_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEasePolynomial : JSB_CCActionEase
{
}
@end

/*
 * CCEasePolynomialInOut
 */
#pragma mark - CCEasePolynomialInOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEasePolynomialInOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEasePolynomialInOut_object;
extern JSClass *JSB_CCEasePolynomialInOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEasePolynomialInOut : JSB_CCEasePolynomial
{
}
@end

/*
 * CCFollow
 */
#pragma mark - CCFollow

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFollow_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFollow_object;
extern JSClass *JSB_CCFollow_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFollow : JSB_CCAction
{
}
@end

/*
 * CCOrbitCamera
 */
#pragma mark - CCOrbitCamera

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCOrbitCamera_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCOrbitCamera_object;
extern JSClass *JSB_CCOrbitCamera_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCOrbitCamera : JSB_CCActionCamera
{
}
@end

/*
 * CCAnimationFrame
 */
#pragma mark - CCAnimationFrame

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCAnimationFrame_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCAnimationFrame_object;
extern JSClass *JSB_CCAnimationFrame_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCAnimationFrame : JSB_NSObject
{
}
@end

/*
 * CCTransitionSlideInL
 */
#pragma mark - CCTransitionSlideInL

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionSlideInL_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionSlideInL_object;
extern JSClass *JSB_CCTransitionSlideInL_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionSlideInL : JSB_CCTransitionScene
{
}
@end

/*
 * CCTransitionSlideInB
 */
#pragma mark - CCTransitionSlideInB

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionSlideInB_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionSlideInB_object;
extern JSClass *JSB_CCTransitionSlideInB_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionSlideInB : JSB_CCTransitionSlideInL
{
}
@end

/*
 * CCTimer
 */
#pragma mark - CCTimer

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTimer_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTimer_object;
extern JSClass *JSB_CCTimer_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTimer : JSB_NSObject
{
}
@end

/*
 * CCTimerBlock
 */
#pragma mark - CCTimerBlock

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTimerBlock_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTimerBlock_object;
extern JSClass *JSB_CCTimerBlock_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTimerBlock : JSB_CCTimer
{
}
@end

/*
 * CCParallaxNode
 */
#pragma mark - CCParallaxNode

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParallaxNode_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParallaxNode_object;
extern JSClass *JSB_CCParallaxNode_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParallaxNode : JSB_CCNode
{
}
@end

/*
 * CCTransitionProgressHorizontal
 */
#pragma mark - CCTransitionProgressHorizontal

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionProgressHorizontal_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionProgressHorizontal_object;
extern JSClass *JSB_CCTransitionProgressHorizontal_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionProgressHorizontal : JSB_CCTransitionProgress
{
}
@end

/*
 * CCRepeat
 */
#pragma mark - CCRepeat

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCRepeat_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCRepeat_object;
extern JSClass *JSB_CCRepeat_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCRepeat : JSB_CCActionInterval
{
}
@end

/*
 * CCParticleSnow
 */
#pragma mark - CCParticleSnow

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleSnow_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleSnow_object;
extern JSClass *JSB_CCParticleSnow_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleSnow : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCShatteredTiles3D
 */
#pragma mark - CCShatteredTiles3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCShatteredTiles3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCShatteredTiles3D_object;
extern JSClass *JSB_CCShatteredTiles3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCShatteredTiles3D : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCTransitionFlipY
 */
#pragma mark - CCTransitionFlipY

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionFlipY_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionFlipY_object;
extern JSClass *JSB_CCTransitionFlipY_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionFlipY : JSB_CCTransitionSceneOriented
{
}
@end

/*
 * CCTransitionFlipX
 */
#pragma mark - CCTransitionFlipX

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionFlipX_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionFlipX_object;
extern JSClass *JSB_CCTransitionFlipX_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionFlipX : JSB_CCTransitionSceneOriented
{
}
@end

/*
 * CCSpriteFrame
 */
#pragma mark - CCSpriteFrame

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSpriteFrame_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSpriteFrame_object;
extern JSClass *JSB_CCSpriteFrame_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSpriteFrame : JSB_NSObject
{
}
@end

/*
 * CCSplitRows
 */
#pragma mark - CCSplitRows

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSplitRows_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSplitRows_object;
extern JSClass *JSB_CCSplitRows_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSplitRows : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCTextureCache
 */
#pragma mark - CCTextureCache

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTextureCache_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTextureCache_object;
extern JSClass *JSB_CCTextureCache_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTextureCache : JSB_NSObject
{
}
@end

/*
 * CCRipple3D
 */
#pragma mark - CCRipple3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCRipple3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCRipple3D_setPosition_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCRipple3D_object;
extern JSClass *JSB_CCRipple3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCRipple3D : JSB_CCGrid3DAction
{
}
@end

/*
 * CCRotateBy
 */
#pragma mark - CCRotateBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCRotateBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCRotateBy_object;
extern JSClass *JSB_CCRotateBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCRotateBy : JSB_CCActionInterval
{
}
@end

/*
 * CCFadeIn
 */
#pragma mark - CCFadeIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFadeIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFadeIn_object;
extern JSClass *JSB_CCFadeIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFadeIn : JSB_CCActionInterval
{
}
@end

/*
 * CCEaseIn
 */
#pragma mark - CCEaseIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseIn_object;
extern JSClass *JSB_CCEaseIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseIn : JSB_CCEaseRateAction
{
}
@end

/*
 * CCTMXMapInfo
 */
#pragma mark - CCTMXMapInfo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTMXMapInfo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTMXMapInfo_object;
extern JSClass *JSB_CCTMXMapInfo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTMXMapInfo : JSB_NSObject
{
}
@end

/*
 * CCParticleSmoke
 */
#pragma mark - CCParticleSmoke

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCParticleSmoke_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCParticleSmoke_object;
extern JSClass *JSB_CCParticleSmoke_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCParticleSmoke : JSB_CCParticleSystemQuad
{
}
@end

/*
 * CCTMXLayerInfo
 */
#pragma mark - CCTMXLayerInfo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTMXLayerInfo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTMXLayerInfo_object;
extern JSClass *JSB_CCTMXLayerInfo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTMXLayerInfo : JSB_NSObject
{
}
@end

/*
 * CCTransitionZoomFlipY
 */
#pragma mark - CCTransitionZoomFlipY

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionZoomFlipY_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionZoomFlipY_object;
extern JSClass *JSB_CCTransitionZoomFlipY_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionZoomFlipY : JSB_CCTransitionSceneOriented
{
}
@end

/*
 * CCEasePolynomialIn
 */
#pragma mark - CCEasePolynomialIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEasePolynomialIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEasePolynomialIn_object;
extern JSClass *JSB_CCEasePolynomialIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEasePolynomialIn : JSB_CCEasePolynomial
{
}
@end

/*
 * CCShuffleTiles
 */
#pragma mark - CCShuffleTiles

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCShuffleTiles_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCShuffleTiles_object;
extern JSClass *JSB_CCShuffleTiles_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCShuffleTiles : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCReuseGrid
 */
#pragma mark - CCReuseGrid

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCReuseGrid_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCReuseGrid_object;
extern JSClass *JSB_CCReuseGrid_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCReuseGrid : JSB_CCActionInstant
{
}
@end

/*
 * CCConfiguration
 */
#pragma mark - CCConfiguration

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCConfiguration_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCConfiguration_object;
extern JSClass *JSB_CCConfiguration_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCConfiguration : JSB_NSObject
{
}
@end

/*
 * CCEaseSineIn
 */
#pragma mark - CCEaseSineIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseSineIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseSineIn_object;
extern JSClass *JSB_CCEaseSineIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseSineIn : JSB_CCActionEase
{
}
@end

/*
 * CCTransitionFadeBL
 */
#pragma mark - CCTransitionFadeBL

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionFadeBL_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionFadeBL_object;
extern JSClass *JSB_CCTransitionFadeBL_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionFadeBL : JSB_CCTransitionFadeTR
{
}
@end

/*
 * CCAnimate
 */
#pragma mark - CCAnimate

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCAnimate_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCAnimate_object;
extern JSClass *JSB_CCAnimate_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCAnimate : JSB_CCActionInterval
{
}
@end

/*
 * CCPhysicsSprite
 */
#pragma mark - CCPhysicsSprite

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCPhysicsSprite_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCPhysicsSprite_object;
extern JSClass *JSB_CCPhysicsSprite_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCPhysicsSprite : JSB_CCSprite
{
}
@end

/*
 * CCCallBlockN
 */
#pragma mark - CCCallBlockN

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCCallBlockN_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCCallBlockN_actionWithBlock__static(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCCallBlockN_object;
extern JSClass *JSB_CCCallBlockN_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCCallBlockN : JSB_CCActionInstant
{
}
@end

/*
 * CCBezierBy
 */
#pragma mark - CCBezierBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCBezierBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCBezierBy_actionWithDuration_bezier__static(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCBezierBy_object;
extern JSClass *JSB_CCBezierBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCBezierBy : JSB_CCActionInterval
{
}
@end

/*
 * CCAnimation
 */
#pragma mark - CCAnimation

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCAnimation_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCAnimation_object;
extern JSClass *JSB_CCAnimation_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCAnimation : JSB_NSObject
{
}
@end

/*
 * CCEaseSineInOut
 */
#pragma mark - CCEaseSineInOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseSineInOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseSineInOut_object;
extern JSClass *JSB_CCEaseSineInOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseSineInOut : JSB_CCActionEase
{
}
@end

/*
 * CCShaky3D
 */
#pragma mark - CCShaky3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCShaky3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCShaky3D_object;
extern JSClass *JSB_CCShaky3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCShaky3D : JSB_CCGrid3DAction
{
}
@end

/*
 * CCTransitionProgressRadialCW
 */
#pragma mark - CCTransitionProgressRadialCW

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionProgressRadialCW_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionProgressRadialCW_object;
extern JSClass *JSB_CCTransitionProgressRadialCW_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionProgressRadialCW : JSB_CCTransitionProgress
{
}
@end

/*
 * CCDrawNode
 */
#pragma mark - CCDrawNode

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCDrawNode_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCDrawNode_setBlendFunc_(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSB_CCDrawNode_drawPolyWithVerts_count_fillColor_borderWidth_borderColor_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCDrawNode_object;
extern JSClass *JSB_CCDrawNode_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCDrawNode : JSB_CCNode
{
}
@end

/*
 * CCPhysicsDebugNode
 */
#pragma mark - CCPhysicsDebugNode

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCPhysicsDebugNode_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCPhysicsDebugNode_object;
extern JSClass *JSB_CCPhysicsDebugNode_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCPhysicsDebugNode : JSB_CCDrawNode
{
}
@end

/*
 * CCTintTo
 */
#pragma mark - CCTintTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTintTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTintTo_object;
extern JSClass *JSB_CCTintTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTintTo : JSB_CCActionInterval
{
}
@end

/*
 * CCTransitionTurnOffTiles
 */
#pragma mark - CCTransitionTurnOffTiles

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionTurnOffTiles_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionTurnOffTiles_object;
extern JSClass *JSB_CCTransitionTurnOffTiles_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionTurnOffTiles : JSB_CCTransitionScene
{
}
@end

/*
 * CCTransitionSlideInT
 */
#pragma mark - CCTransitionSlideInT

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionSlideInT_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionSlideInT_object;
extern JSClass *JSB_CCTransitionSlideInT_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionSlideInT : JSB_CCTransitionSlideInL
{
}
@end

/*
 * CCBlink
 */
#pragma mark - CCBlink

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCBlink_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCBlink_object;
extern JSClass *JSB_CCBlink_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCBlink : JSB_CCActionInterval
{
}
@end

/*
 * CCTextureAtlas
 */
#pragma mark - CCTextureAtlas

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTextureAtlas_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTextureAtlas_object;
extern JSClass *JSB_CCTextureAtlas_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTextureAtlas : JSB_NSObject
{
}
@end

/*
 * CCTransitionSlideInR
 */
#pragma mark - CCTransitionSlideInR

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionSlideInR_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionSlideInR_object;
extern JSClass *JSB_CCTransitionSlideInR_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionSlideInR : JSB_CCTransitionSlideInL
{
}
@end

/*
 * CCTransitionProgressInOut
 */
#pragma mark - CCTransitionProgressInOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionProgressInOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionProgressInOut_object;
extern JSClass *JSB_CCTransitionProgressInOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionProgressInOut : JSB_CCTransitionProgress
{
}
@end

/*
 * CCEaseBounceIn
 */
#pragma mark - CCEaseBounceIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseBounceIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseBounceIn_object;
extern JSClass *JSB_CCEaseBounceIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseBounceIn : JSB_CCEaseBounce
{
}
@end

/*
 * CCLiquid
 */
#pragma mark - CCLiquid

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCLiquid_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCLiquid_object;
extern JSClass *JSB_CCLiquid_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCLiquid : JSB_CCGrid3DAction
{
}
@end

/*
 * CCProgressTimer
 */
#pragma mark - CCProgressTimer

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCProgressTimer_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCProgressTimer_object;
extern JSClass *JSB_CCProgressTimer_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCProgressTimer : JSB_CCNodeRGBA
{
}
@end

/*
 * CCEaseBounceInOut
 */
#pragma mark - CCEaseBounceInOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseBounceInOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseBounceInOut_object;
extern JSClass *JSB_CCEaseBounceInOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseBounceInOut : JSB_CCEaseBounce
{
}
@end

/*
 * CCActionTween
 */
#pragma mark - CCActionTween

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCActionTween_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCActionTween_object;
extern JSClass *JSB_CCActionTween_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCActionTween : JSB_CCActionInterval
{
}
@end

/*
 * CCGrabber
 */
#pragma mark - CCGrabber

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCGrabber_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCGrabber_object;
extern JSClass *JSB_CCGrabber_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCGrabber : JSB_NSObject
{
}
@end

/*
 * CCTransitionSplitRows
 */
#pragma mark - CCTransitionSplitRows

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionSplitRows_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionSplitRows_object;
extern JSClass *JSB_CCTransitionSplitRows_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionSplitRows : JSB_CCTransitionSplitCols
{
}
@end

/*
 * CCFlipX3D
 */
#pragma mark - CCFlipX3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFlipX3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFlipX3D_object;
extern JSClass *JSB_CCFlipX3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFlipX3D : JSB_CCGrid3DAction
{
}
@end

/*
 * CCFlipY3D
 */
#pragma mark - CCFlipY3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFlipY3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFlipY3D_object;
extern JSClass *JSB_CCFlipY3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFlipY3D : JSB_CCFlipX3D
{
}
@end

/*
 * CCFadeTo
 */
#pragma mark - CCFadeTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCFadeTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCFadeTo_object;
extern JSClass *JSB_CCFadeTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCFadeTo : JSB_CCActionInterval
{
}
@end

/*
 * CCEaseBackInOut
 */
#pragma mark - CCEaseBackInOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseBackInOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseBackInOut_object;
extern JSClass *JSB_CCEaseBackInOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseBackInOut : JSB_CCActionEase
{
}
@end

/*
 * CCEaseExponentialOut
 */
#pragma mark - CCEaseExponentialOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseExponentialOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseExponentialOut_object;
extern JSClass *JSB_CCEaseExponentialOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseExponentialOut : JSB_CCActionEase
{
}
@end

/*
 * CCMoveTo
 */
#pragma mark - CCMoveTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCMoveTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCMoveTo_object;
extern JSClass *JSB_CCMoveTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCMoveTo : JSB_CCMoveBy
{
}
@end

/*
 * CCProfilingTimer
 */
#pragma mark - CCProfilingTimer

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCProfilingTimer_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCProfilingTimer_object;
extern JSClass *JSB_CCProfilingTimer_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCProfilingTimer : JSB_NSObject
{
}
@end

/*
 * CCSequence
 */
#pragma mark - CCSequence

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSequence_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSequence_object;
extern JSClass *JSB_CCSequence_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSequence : JSB_CCActionInterval
{
}
@end

/*
 * CCEaseElasticInOut
 */
#pragma mark - CCEaseElasticInOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseElasticInOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseElasticInOut_object;
extern JSClass *JSB_CCEaseElasticInOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseElasticInOut : JSB_CCEaseElastic
{
}
@end

/*
 * CCWaves
 */
#pragma mark - CCWaves

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCWaves_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCWaves_object;
extern JSClass *JSB_CCWaves_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCWaves : JSB_CCGrid3DAction
{
}
@end

/*
 * CCTransitionZoomFlipAngular
 */
#pragma mark - CCTransitionZoomFlipAngular

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionZoomFlipAngular_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionZoomFlipAngular_object;
extern JSClass *JSB_CCTransitionZoomFlipAngular_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionZoomFlipAngular : JSB_CCTransitionSceneOriented
{
}
@end

/*
 * CCClippingNode
 */
#pragma mark - CCClippingNode

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCClippingNode_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCClippingNode_object;
extern JSClass *JSB_CCClippingNode_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCClippingNode : JSB_CCNode
{
}
@end

/*
 * CCTintBy
 */
#pragma mark - CCTintBy

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTintBy_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTintBy_object;
extern JSClass *JSB_CCTintBy_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTintBy : JSB_CCActionInterval
{
}
@end

/*
 * CCBezierTo
 */
#pragma mark - CCBezierTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCBezierTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCBezierTo_object;
extern JSClass *JSB_CCBezierTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCBezierTo : JSB_CCBezierBy
{
}
@end

/*
 * CCDeccelAmplitude
 */
#pragma mark - CCDeccelAmplitude

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCDeccelAmplitude_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCDeccelAmplitude_object;
extern JSClass *JSB_CCDeccelAmplitude_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCDeccelAmplitude : JSB_CCActionInterval
{
}
@end

/*
 * CCLens3D
 */
#pragma mark - CCLens3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCLens3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCLens3D_setPosition_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCLens3D_object;
extern JSClass *JSB_CCLens3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCLens3D : JSB_CCGrid3DAction
{
}
@end

/*
 * CCWaves3D
 */
#pragma mark - CCWaves3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCWaves3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCWaves3D_object;
extern JSClass *JSB_CCWaves3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCWaves3D : JSB_CCGrid3DAction
{
}
@end

/*
 * CCJumpTo
 */
#pragma mark - CCJumpTo

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCJumpTo_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCJumpTo_object;
extern JSClass *JSB_CCJumpTo_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCJumpTo : JSB_CCJumpBy
{
}
@end

/*
 * CCEaseBackOut
 */
#pragma mark - CCEaseBackOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseBackOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseBackOut_object;
extern JSClass *JSB_CCEaseBackOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseBackOut : JSB_CCActionEase
{
}
@end

/*
 * CCEasePolynomialOut
 */
#pragma mark - CCEasePolynomialOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEasePolynomialOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEasePolynomialOut_object;
extern JSClass *JSB_CCEasePolynomialOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEasePolynomialOut : JSB_CCEasePolynomial
{
}
@end

/*
 * CCWavesTiles3D
 */
#pragma mark - CCWavesTiles3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCWavesTiles3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCWavesTiles3D_object;
extern JSClass *JSB_CCWavesTiles3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCWavesTiles3D : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCTurnOffTiles
 */
#pragma mark - CCTurnOffTiles

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTurnOffTiles_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTurnOffTiles_object;
extern JSClass *JSB_CCTurnOffTiles_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTurnOffTiles : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCTransitionJumpZoom
 */
#pragma mark - CCTransitionJumpZoom

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionJumpZoom_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionJumpZoom_object;
extern JSClass *JSB_CCTransitionJumpZoom_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionJumpZoom : JSB_CCTransitionScene
{
}
@end

/*
 * CCSplitCols
 */
#pragma mark - CCSplitCols

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSplitCols_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSplitCols_object;
extern JSClass *JSB_CCSplitCols_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSplitCols : JSB_CCTiledGrid3DAction
{
}
@end

/*
 * CCTransitionFadeUp
 */
#pragma mark - CCTransitionFadeUp

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionFadeUp_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionFadeUp_object;
extern JSClass *JSB_CCTransitionFadeUp_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionFadeUp : JSB_CCTransitionFadeTR
{
}
@end

/*
 * CCTimerTargetSelector
 */
#pragma mark - CCTimerTargetSelector

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTimerTargetSelector_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTimerTargetSelector_object;
extern JSClass *JSB_CCTimerTargetSelector_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTimerTargetSelector : JSB_CCTimer
{
}
@end

/*
 * CCRenderTexture
 */
#pragma mark - CCRenderTexture

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCRenderTexture_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCRenderTexture_object;
extern JSClass *JSB_CCRenderTexture_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCRenderTexture : JSB_CCNode
{
}
@end

/*
 * CCTwirl
 */
#pragma mark - CCTwirl

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTwirl_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods
JSBool JSB_CCTwirl_setPosition_(JSContext *cx, uint32_t argc, jsval *vp);


extern JSObject *JSB_CCTwirl_object;
extern JSClass *JSB_CCTwirl_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTwirl : JSB_CCGrid3DAction
{
}
@end

/*
 * CCTexturePVR
 */
#pragma mark - CCTexturePVR

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTexturePVR_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTexturePVR_object;
extern JSClass *JSB_CCTexturePVR_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTexturePVR : JSB_NSObject
{
}
@end

/*
 * CCGLProgram
 */
#pragma mark - CCGLProgram

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCGLProgram_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCGLProgram_object;
extern JSClass *JSB_CCGLProgram_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCGLProgram : JSB_NSObject
{
}
@end

/*
 * CCGrid3D
 */
#pragma mark - CCGrid3D

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCGrid3D_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCGrid3D_object;
extern JSClass *JSB_CCGrid3D_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCGrid3D : JSB_CCGridBase
{
}
@end

/*
 * CCActionManager
 */
#pragma mark - CCActionManager

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCActionManager_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCActionManager_object;
extern JSClass *JSB_CCActionManager_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCActionManager : JSB_NSObject
{
}
@end

/*
 * CCSpriteFrameCache
 */
#pragma mark - CCSpriteFrameCache

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCSpriteFrameCache_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCSpriteFrameCache_object;
extern JSClass *JSB_CCSpriteFrameCache_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCSpriteFrameCache : JSB_NSObject
{
}
@end

/*
 * CCEaseSineOut
 */
#pragma mark - CCEaseSineOut

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCEaseSineOut_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCEaseSineOut_object;
extern JSClass *JSB_CCEaseSineOut_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCEaseSineOut : JSB_CCActionEase
{
}
@end

/*
 * CCTransitionProgressOutIn
 */
#pragma mark - CCTransitionProgressOutIn

#ifdef __cplusplus
extern "C" {
#endif

void JSB_CCTransitionProgressOutIn_createClass(JSContext *cx, JSObject* globalObj, const char* name );

// Manually generated methods


extern JSObject *JSB_CCTransitionProgressOutIn_object;
extern JSClass *JSB_CCTransitionProgressOutIn_class;

#ifdef __cplusplus
}
#endif

/* Proxy class */
@interface JSB_CCTransitionProgressOutIn : JSB_CCTransitionProgress
{
}
@end


#endif // JSB_INCLUDE_COCOS2D
